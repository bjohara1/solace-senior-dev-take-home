{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{ChatInterface}from'./components/ChatInterface';import{VoiceSettings}from'./components/VoiceSettings';import{useAudioRecorder}from'./hooks/useAudioRecorder';import{useASR}from'./hooks/useASR';import{useChatbot}from'./hooks/useChatbot';import{useTTS}from'./hooks/useTTS';import{useMemory}from'./hooks/useMemory';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([]);const[isRecording,setIsRecording]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[error,setError]=useState(null);const[voiceSettings,setVoiceSettings]=useState({voice:'female',speed:1.0,pitch:1.0});const{startRecording,stopRecording,audioBlob,isRecording:recorderIsRecording}=useAudioRecorder();const{transcribe}=useASR();const{sendMessage}=useChatbot();const{synthesize}=useTTS();const{saveTranscript,getTranscripts}=useMemory();const audioRef=useRef(null);// Handle recording state changes\nuseEffect(()=>{setIsRecording(recorderIsRecording);},[recorderIsRecording]);// Process audio when recording stops\nuseEffect(()=>{if(audioBlob&&!isRecording){handleAudioProcessing();}},[audioBlob,isRecording]);const handleAudioProcessing=async()=>{if(!audioBlob)return;setIsProcessing(true);setError(null);try{// Step 1: Transcribe audio\nconst transcript=await transcribe(audioBlob);if(!transcript){throw new Error('Failed to transcribe audio');}// Step 2: Save transcript to memory\nawait saveTranscript(transcript);// Step 3: Add user message\nconst userMessage={id:Date.now().toString(),text:transcript,sender:'user',timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);// Step 4: Get chatbot response\nconst response=await sendMessage(transcript,getTranscripts());if(!response){throw new Error('Failed to get chatbot response');}// Step 5: Add assistant message\nconst assistantMessage={id:(Date.now()+1).toString(),text:response,sender:'assistant',timestamp:new Date()};setMessages(prev=>[...prev,assistantMessage]);// Step 6: Synthesize and play response\nconst audioUrl=await synthesize(response,voiceSettings);if(audioUrl&&audioRef.current){audioRef.current.src=audioUrl;audioRef.current.play();}}catch(err){setError(err instanceof Error?err.message:'An error occurred');console.error('Audio processing error:',err);}finally{setIsProcessing(false);}};const handleStartRecording=async()=>{try{await startRecording();}catch(err){setError('Failed to start recording. Please check microphone permissions.');}};const handleStopRecording=()=>{stopRecording();};const handleVoiceChange=newSettings=>{setVoiceSettings(newSettings);};const clearError=()=>{setError(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Solace Lite - Voice Companion\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your AI-powered voice assistant with psychiatric knowledge\"})]}),/*#__PURE__*/_jsx(\"main\",{className:\"App-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(VoiceSettings,{settings:voiceSettings,onSettingsChange:handleVoiceChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"voice-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:`record-button ${isRecording?'recording':''}`,onClick:isRecording?handleStopRecording:handleStartRecording,disabled:isProcessing,children:isRecording?'🛑 Stop':'🎤 Talk'}),isProcessing&&/*#__PURE__*/_jsxs(\"div\",{className:\"processing-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing...\"})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",onClick:clearError,children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-error\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(ChatInterface,{messages:messages,isLoading:isProcessing}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,style:{display:'none'}})]})}),/*#__PURE__*/_jsx(\"footer\",{className:\"App-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Powered by OpenAI Whisper, GPT, and AWS Polly\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatInterface","VoiceSettings","useAudioRecorder","useASR","useChatbot","useTTS","useMemory","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","isRecording","setIsRecording","isProcessing","setIsProcessing","error","setError","voiceSettings","setVoiceSettings","voice","speed","pitch","startRecording","stopRecording","audioBlob","recorderIsRecording","transcribe","sendMessage","synthesize","saveTranscript","getTranscripts","audioRef","handleAudioProcessing","transcript","Error","userMessage","id","Date","now","toString","text","sender","timestamp","prev","response","assistantMessage","audioUrl","current","src","play","err","message","console","handleStartRecording","handleStopRecording","handleVoiceChange","newSettings","clearError","className","children","settings","onSettingsChange","onClick","disabled","isLoading","ref","style","display"],"sources":["/Users/bradohara/solace/solace/task-C/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { VoiceCapture } from './components/VoiceCapture';\nimport { ChatInterface } from './components/ChatInterface';\nimport { VoiceSettings } from './components/VoiceSettings';\nimport { useAudioRecorder } from './hooks/useAudioRecorder';\nimport { useASR } from './hooks/useASR';\nimport { useChatbot } from './hooks/useChatbot';\nimport { useTTS } from './hooks/useTTS';\nimport { useMemory } from './hooks/useMemory';\nimport './App.css';\n\nexport interface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'assistant';\n  timestamp: Date;\n}\n\nexport interface VoiceSettings {\n  voice: 'male' | 'female';\n  speed: number;\n  pitch: number;\n}\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [voiceSettings, setVoiceSettings] = useState<VoiceSettings>({\n    voice: 'female',\n    speed: 1.0,\n    pitch: 1.0\n  });\n\n  const { startRecording, stopRecording, audioBlob, isRecording: recorderIsRecording } = useAudioRecorder();\n  const { transcribe } = useASR();\n  const { sendMessage } = useChatbot();\n  const { synthesize } = useTTS();\n  const { saveTranscript, getTranscripts } = useMemory();\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // Handle recording state changes\n  useEffect(() => {\n    setIsRecording(recorderIsRecording);\n  }, [recorderIsRecording]);\n\n  // Process audio when recording stops\n  useEffect(() => {\n    if (audioBlob && !isRecording) {\n      handleAudioProcessing();\n    }\n  }, [audioBlob, isRecording]);\n\n  const handleAudioProcessing = async () => {\n    if (!audioBlob) return;\n\n    setIsProcessing(true);\n    setError(null);\n\n    try {\n      // Step 1: Transcribe audio\n      const transcript = await transcribe(audioBlob);\n      if (!transcript) {\n        throw new Error('Failed to transcribe audio');\n      }\n\n      // Step 2: Save transcript to memory\n      await saveTranscript(transcript);\n\n      // Step 3: Add user message\n      const userMessage: Message = {\n        id: Date.now().toString(),\n        text: transcript,\n        sender: 'user',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Step 4: Get chatbot response\n      const response = await sendMessage(transcript, getTranscripts());\n      if (!response) {\n        throw new Error('Failed to get chatbot response');\n      }\n\n      // Step 5: Add assistant message\n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        text: response,\n        sender: 'assistant',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Step 6: Synthesize and play response\n      const audioUrl = await synthesize(response, voiceSettings);\n      if (audioUrl && audioRef.current) {\n        audioRef.current.src = audioUrl;\n        audioRef.current.play();\n      }\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n      console.error('Audio processing error:', err);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleStartRecording = async () => {\n    try {\n      await startRecording();\n    } catch (err) {\n      setError('Failed to start recording. Please check microphone permissions.');\n    }\n  };\n\n  const handleStopRecording = () => {\n    stopRecording();\n  };\n\n  const handleVoiceChange = (newSettings: VoiceSettings) => {\n    setVoiceSettings(newSettings);\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Solace Lite - Voice Companion</h1>\n        <p>Your AI-powered voice assistant with psychiatric knowledge</p>\n      </header>\n\n      <main className=\"App-main\">\n        <div className=\"app-container\">\n          {/* Voice Settings */}\n          <VoiceSettings \n            settings={voiceSettings}\n            onSettingsChange={handleVoiceChange}\n          />\n\n          {/* Voice Capture Controls */}\n          <div className=\"voice-controls\">\n            <button\n              className={`record-button ${isRecording ? 'recording' : ''}`}\n              onClick={isRecording ? handleStopRecording : handleStartRecording}\n              disabled={isProcessing}\n            >\n              {isRecording ? '🛑 Stop' : '🎤 Talk'}\n            </button>\n            \n            {isProcessing && (\n              <div className=\"processing-indicator\">\n                <div className=\"spinner\"></div>\n                <span>Processing...</span>\n              </div>\n            )}\n          </div>\n\n          {/* Error Display */}\n          {error && (\n            <div className=\"error-message\" onClick={clearError}>\n              <span>⚠️ {error}</span>\n              <button className=\"close-error\">×</button>\n            </div>\n          )}\n\n          {/* Chat Interface */}\n          <ChatInterface \n            messages={messages}\n            isLoading={isProcessing}\n          />\n\n          {/* Hidden audio element for TTS playback */}\n          <audio ref={audioRef} style={{ display: 'none' }} />\n        </div>\n      </main>\n\n      <footer className=\"App-footer\">\n        <p>Powered by OpenAI Whisper, GPT, and AWS Polly</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}