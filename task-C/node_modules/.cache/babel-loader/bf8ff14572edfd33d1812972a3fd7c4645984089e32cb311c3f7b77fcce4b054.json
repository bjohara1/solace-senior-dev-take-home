{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ChatInterface=_ref=>{let{messages,isLoading}=_ref;const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);const formatTime=date=>{return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-interface\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Conversation\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83C\\uDFA4 Start talking to begin your conversation!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"I'm here to help with any questions or concerns you might have.\"})]}):messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`message ${message.sender==='user'?'user':'assistant'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.text}),/*#__PURE__*/_jsx(\"div\",{className:\"message-time\",children:formatTime(message.timestamp)})]})},message.id)),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"message assistant\",children:/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})]});};","map":{"version":3,"names":["React","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","ChatInterface","_ref","messages","isLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatTime","date","toLocaleTimeString","hour","minute","className","children","length","map","message","sender","text","timestamp","id","ref"],"sources":["/Users/bradohara/solace/solace/task-C/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Message } from '../App';\n\ninterface ChatInterfaceProps {\n  messages: Message[];\n  isLoading: boolean;\n}\n\nexport const ChatInterface: React.FC<ChatInterfaceProps> = ({ messages, isLoading }) => {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <h3>Conversation</h3>\n      <div className=\"messages-container\">\n        {messages.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>ðŸŽ¤ Start talking to begin your conversation!</p>\n            <p>I'm here to help with any questions or concerns you might have.</p>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div\n              key={message.id}\n              className={`message ${message.sender === 'user' ? 'user' : 'assistant'}`}\n            >\n              <div className=\"message-content\">\n                <div className=\"message-text\">{message.text}</div>\n                <div className=\"message-time\">{formatTime(message.timestamp)}</div>\n              </div>\n            </div>\n          ))\n        )}\n        \n        {isLoading && (\n          <div className=\"message assistant\">\n            <div className=\"message-content\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n    </div>\n  );\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQjD,MAAO,MAAM,CAAAC,aAA2C,CAAGC,IAAA,EAA6B,IAA5B,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAAF,IAAA,CACjF,KAAM,CAAAG,cAAc,CAAGV,MAAM,CAAiB,IAAI,CAAC,CAEnD,KAAM,CAAAW,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAF,cAAc,CAACG,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAEDd,SAAS,CAAC,IAAM,CACdU,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACH,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAQ,UAAU,CAAIC,IAAU,EAAK,CACjC,MAAO,CAAAA,IAAI,CAACC,kBAAkB,CAAC,EAAE,CAAE,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CAC5E,CAAC,CAED,mBACEf,KAAA,QAAKgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnB,IAAA,OAAAmB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBjB,KAAA,QAAKgB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAChCd,QAAQ,CAACe,MAAM,GAAK,CAAC,cACpBlB,KAAA,QAAKgB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BnB,IAAA,MAAAmB,QAAA,CAAG,wDAA4C,CAAG,CAAC,cACnDnB,IAAA,MAAAmB,QAAA,CAAG,iEAA+D,CAAG,CAAC,EACnE,CAAC,CAENd,QAAQ,CAACgB,GAAG,CAAEC,OAAO,eACnBtB,IAAA,QAEEkB,SAAS,CAAE,WAAWI,OAAO,CAACC,MAAM,GAAK,MAAM,CAAG,MAAM,CAAG,WAAW,EAAG,CAAAJ,QAAA,cAEzEjB,KAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnB,IAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEG,OAAO,CAACE,IAAI,CAAM,CAAC,cAClDxB,IAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEN,UAAU,CAACS,OAAO,CAACG,SAAS,CAAC,CAAM,CAAC,EAChE,CAAC,EANDH,OAAO,CAACI,EAOV,CACN,CACF,CAEApB,SAAS,eACRN,IAAA,QAAKkB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCnB,IAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BjB,KAAA,QAAKgB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BnB,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,cACbA,IAAA,UAAY,CAAC,EACV,CAAC,CACH,CAAC,CACH,CACN,cAEDA,IAAA,QAAK2B,GAAG,CAAEpB,cAAe,CAAE,CAAC,EACzB,CAAC,EACH,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}